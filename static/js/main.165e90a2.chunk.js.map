{"version":3,"sources":["assets/logo.svg","components/blocks/navBar.js","assets/zoom.svg","components/blocks/search.js","components/blocks/company.js","App.js","index.js"],"names":["NavBar","props","useState","selected","setSelected","shipmentList","shipData","filter","val","searchValue","name","toLowerCase","includes","map","v","i","className","id","onClick","setSelectedCompanyValue","setNavOpenedState","navOpened","src","logo","alt","Search","placeholder","type","onChange","ev","setSearchValue","target","value","style","backgroundImage","zoom","Company","box","setBox","count","message","useEffect","selectedCompany","boxes","split","Number","length","isNaN","sort","reverse","tmpSum","parseFloat","NaN","isDel","splice","email","App","setShipData","loading","setLoading","search","setSearch","setSelectedCompany","setNavOpened","axios","get","then","res","data","a","b","catch","err","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.165e90a2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b3a39951.svg\";","import React, { useState } from \"react\";\r\nimport logo from \"../../assets/logo.svg\";\r\n\r\nconst NavBar = (props) => {\r\n  const [selected, setSelected] = useState(\"\");\r\n\r\n  const shipmentList = (\r\n    <ul>\r\n      {props.shipData\r\n        .filter((val) => {\r\n          if (props.searchValue === \"\") {\r\n            return val;\r\n          } else if (\r\n            val.name.toLowerCase().includes(props.searchValue.toLowerCase())\r\n          ) {\r\n            return val;\r\n          } else {\r\n            return null;\r\n          }\r\n        })\r\n        .map((v, i) => {\r\n          return (\r\n            <li\r\n              key={i}\r\n              className={selected === v.id ? \"selected\" : null}\r\n              onClick={() => {\r\n                setSelected(v.id);\r\n                props.setSelectedCompanyValue(v);\r\n                props.setNavOpenedState(!props.navOpened)\r\n              }}\r\n            >\r\n              {v.name}\r\n            </li>\r\n          );\r\n        })}\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <div className=\"navBar\">\r\n      <div className=\"logo\">\r\n        <img src={logo} alt=\"logo\" />\r\n      </div>\r\n      <h4>Shipment List</h4>\r\n      <div className={props.navOpened ? \"navigation opened\" : \"navigation\"}>{shipmentList}</div>\r\n      <div\r\n        className={props.navOpened ? \"burger opened\" : \"burger\"}\r\n        onClick={() => props.setNavOpenedState(!props.navOpened)}\r\n      >\r\n        <div className=\"bar1\"></div>\r\n        <div className=\"bar2\"></div>\r\n        <div className=\"bar3\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","export default __webpack_public_path__ + \"static/media/zoom.d37054b8.svg\";","import React from \"react\";\r\nimport zoom from \"../../assets/zoom.svg\";\r\n\r\nconst Search = (props) => {\r\n  return (\r\n    <div className={props.navOpened ? \"search opened\" : \"search\"}>\r\n      <input\r\n        placeholder=\"Search\"\r\n        type=\"text\"\r\n        onChange={(ev) => props.setSearchValue(ev.target.value)}\r\n        style={{ backgroundImage: `url(${zoom})` }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst Company = (props) => {\r\n  const [box, setBox] = useState(\"\");\r\n  let count = 0;\r\n  let message = \"\";\r\n\r\n  // assign value to box on every company update\r\n  useEffect(() => {\r\n    if (props.selectedCompany !== null) {\r\n      setBox(props.selectedCompany.boxes);\r\n    }\r\n  }, [props.selectedCompany]);\r\n\r\n  // Cargo bay calculator\r\n  if (props.selectedCompany !== null) {\r\n    let boxes = box.split(\",\").map(Number);\r\n\r\n    for (let i = 0; i < boxes.length; i++) {\r\n      if (isNaN(boxes[i])) {\r\n        message = \"Data is incorrect!\";\r\n        break;\r\n      }\r\n      if (boxes[i] > 10) {\r\n        message = \"Each Starship cargo bay can hold up to 10 units.\";\r\n        break;\r\n      }\r\n    }\r\n\r\n    boxes = boxes.sort().reverse();\r\n\r\n    while (boxes.length > 0) {\r\n      let tmpSum = parseFloat(boxes[0]);\r\n      if (isNaN(tmpSum)) {\r\n        count = NaN;\r\n        break;\r\n      }\r\n      let isDel = false;\r\n      for (let i = 1; i < boxes.length; i++) {\r\n        if (tmpSum + parseFloat(boxes[i]) <= 10) {\r\n          tmpSum += parseFloat(boxes[i]);\r\n        } else {\r\n          isDel = true;\r\n          boxes.splice(0, i);\r\n          break;\r\n        }\r\n      }\r\n      count++;\r\n      if (!isDel && tmpSum <= 10) break;\r\n      if (count > 20) break;\r\n    }\r\n  }\r\n\r\n\r\n  return props.selectedCompany !== null ? (\r\n    <div className=\"company\">\r\n      <h1>{props.selectedCompany.name}</h1>\r\n      <h2>{props.selectedCompany.email}</h2>\r\n      <h3>CARGO BOXES</h3>\r\n      <input\r\n        type=\"text\"\r\n        value={box}\r\n        onChange={(ev) => setBox(ev.target.value)}\r\n        placeholder=\"Enter cargo boxes\"\r\n      />\r\n      <h4>Number of required cargo bays</h4>\r\n      <h5>{message.length > 0 ? message : count}</h5>\r\n    </div>\r\n  ) : (\r\n    <div className=\"company\">\r\n      <h1>Please Select Company</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Company;\r\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { NavBar, Search, Company } from \"./components\";\n\nfunction App() {\n  const [shipData, setShipData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [search, setSearch] = useState(\"\");\n  const [selectedCompany, setSelectedCompany] = useState(null);\n  const [navOpened, setNavOpened] = useState(false);\n\n  // Event Handlers\n  const setSelectedCompanyValue = (val) => {\n    setSelectedCompany(val);\n  };\n\n  const setSearchValue = (val) => {\n    setSearch(val);\n  };\n\n  const setNavOpenedState = (val) => {\n    setNavOpened(val);\n  };\n\n  // Get Shipment data, sort and save in shipData state, then set loading state to false;\n  useEffect(() => {\n    axios\n      .get(\n        \"https://bitbucket.org/hpstore/spacex-cargo-planner/raw/204125d74487b1423bbf0453f4dcb53a2161353b/shipments.json\"\n      )\n      .then((res) => {\n        setShipData(\n          res.data.sort((a, b) =>\n            a.name !== b.name ? (a.name < b.name ? -1 : 1) : 0\n          )\n        );\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return loading ? (\n    <div className=\"loading\">Loading...</div>\n  ) : (\n    <>\n      <NavBar\n        shipData={shipData}\n        searchValue={search}\n        setSelectedCompanyValue={setSelectedCompanyValue}\n        navOpened={navOpened}\n        setNavOpenedState={setNavOpenedState}\n      />\n      <div className=\"main\">\n        <Search setSearchValue={setSearchValue} navOpened={navOpened} />\n        <Company shipData={shipData} selectedCompany={selectedCompany} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport \"./style/index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}
{"version":3,"sources":["assets/logo.svg","components/blocks/navBar.jsx","assets/zoom.svg","components/blocks/search.jsx","hooks/useInput.jsx","components/blocks/company.jsx","components/loading.jsx","App.jsx","index.jsx"],"names":["NavBar","shipData","searchValue","navOpened","setNavOpened","path","useLocation","pathname","shipmentList","filter","val","name","toLowerCase","includes","map","v","to","id","state","company","className","onClick","src","logo","alt","Search","setSearch","placeholder","type","onChange","style","backgroundImage","zoom","useInput","initialValue","useState","value","setValue","ev","target","Company","location","useOutletContext","params","useParams","cargoInput","setCargoInput","count","message","find","companyId","useEffect","boxes","split","Number","sort","reverse","reduce","prVal","curVal","trim","length","isNaN","parseFloat","email","Loading","xmlns","role","width","height","preserveAspectRatio","viewBox","color","position","left","top","cx","cy","r","fill","attributeName","values","dur","repeatCount","begin","keySplines","calcMode","transform","App","setShipData","loading","setLoading","searchInput","axios","get","then","res","data","a","b","catch","err","console","log","alert","context","ReactDOM","render","element","index","document","getElementById"],"mappings":"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","file":"static/js/main.b6f3cb27.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b3a39951.svg\";","import React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport logo from \"../../assets/logo.svg\";\r\n\r\nconst NavBar = ({ shipData, searchValue, navOpened, setNavOpened }) => {\r\n  const location = useLocation();\r\n  const path = location.pathname;\r\n\r\n  const shipmentList = shipData\r\n    .filter((val) => val.name.toLowerCase().includes(searchValue.toLowerCase()))\r\n    .map((v) => {\r\n      return (\r\n        <Link\r\n          to={`${v.id}`}\r\n          state={{ company: { ...v } }}\r\n          key={v.id}\r\n          className={path === `/spacex-cargo-planner/${v.id}` ? \"selected\" : null}\r\n          onClick={() => setNavOpened(false)}\r\n        >\r\n          {v.name}\r\n        </Link>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <div className=\"navBar\">\r\n      <div className=\"logo\">\r\n        <img src={logo} alt=\"logo\" />\r\n      </div>\r\n      <h4>Shipment List</h4>\r\n      <nav className={navOpened ? \"navigation opened\" : \"navigation\"}>\r\n        {shipmentList}\r\n      </nav>\r\n      <div\r\n        className={navOpened ? \"burger opened\" : \"burger\"}\r\n        onClick={() => setNavOpened(!navOpened)}\r\n      >\r\n        <div className=\"bar1\"></div>\r\n        <div className=\"bar2\"></div>\r\n        <div className=\"bar3\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","export default __webpack_public_path__ + \"static/media/zoom.d37054b8.svg\";","import React from \"react\";\r\nimport zoom from \"../../assets/zoom.svg\";\r\n\r\nconst Search = ({navOpened, setSearch}) => {\r\n\r\n  return (\r\n    <div className={navOpened ? \"search opened\" : \"search\"}>\r\n      <input\r\n        placeholder=\"Search\"\r\n        type=\"text\"\r\n        onChange={setSearch}\r\n        style={{ backgroundImage: `url(${zoom})` }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { useState } from \"react/cjs/react.development\";\r\n\r\nexport default function useInput(initialValue) {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const onChange = (ev) => {\r\n    setValue(ev.target.value);\r\n  };\r\n\r\n  return {\r\n    value,\r\n    setValue,\r\n    onChange,\r\n  };\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useLocation, useOutletContext, useParams } from \"react-router-dom\";\r\nimport useInput from \"../../hooks/useInput\";\r\n\r\nconst Company = () => {\r\n  const location = useLocation();\r\n  let company = null;\r\n  \r\n  const [shipData] = useOutletContext();\r\n  const params = useParams();\r\n\r\n  const cargoInput = useInput(\"\");\r\n  const setCargoInput = cargoInput.setValue;\r\n  \r\n  let count = 1;\r\n  let message = \"\";\r\n\r\n  // handles manual url input, if we dont get data from Link, than find it through list\r\n  if (location.state !== null && location.state.company !== null) {\r\n    company = location.state.company\r\n  } else {\r\n    company = shipData.find(val => val.id === params.companyId)\r\n  }\r\n\r\n  // assign value to box on every company update\r\n  useEffect(() => {\r\n    setCargoInput(company.boxes !== null ? company.boxes : \"\");\r\n  }, [company, setCargoInput]);\r\n\r\n  // Cargo bay calculator\r\n  if (company !== null) {\r\n    let boxes = cargoInput.value.split(\",\").map(Number).sort().reverse();\r\n    boxes.reduce((prVal, curVal) => {\r\n      if (cargoInput.value.trim().length === 0) {\r\n        message = \"Please provide new data\";\r\n      }\r\n      if (isNaN(curVal)) {\r\n        message = \"Data is incorrect!\";\r\n      }\r\n      if (curVal > 10) {\r\n        message = \"Each Starship cargo bay can hold up to 10 units.\";\r\n      }\r\n\r\n      if (parseFloat(prVal) + parseFloat(curVal) > 10) {\r\n        prVal = parseFloat(curVal);\r\n        count++;\r\n      } else {\r\n        prVal += parseFloat(curVal);\r\n      }\r\n      return prVal;\r\n    }, 0);\r\n  }\r\n\r\n  return (\r\n    <div className=\"company\">\r\n      <h1>{company.name}</h1>\r\n      <h2>{company.email}</h2>\r\n      <h3>CARGO BOXES</h3>\r\n      <input\r\n        type=\"text\"\r\n        value={cargoInput.value}\r\n        onChange={cargoInput.onChange}\r\n        placeholder=\"Enter cargo boxes\"\r\n      />\r\n      <h4>Number of required cargo bays</h4>\r\n      <h5>{message.length > 0 ? message : count}</h5>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Company;\r\n","import React from \"react\";\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <div className=\"loading\">\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        aria-hidden=\"true\"\r\n        role=\"img\"\r\n        width=\"20vw\"\r\n        height=\"20vw\"\r\n        preserveAspectRatio=\"xMidYMid meet\"\r\n        viewBox=\"0 0 24 24\"\r\n        style={{\r\n          color:'#FFFFFF',\r\n          position: 'absolute',\r\n          left:'40vw',\r\n          top:'calc(50vh - 10vw)',\r\n        }}\r\n      >\r\n        <circle cx=\"12\" cy=\"2\" r=\"0\" fill=\"currentColor\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            values=\"0;2;0;0\"\r\n            dur=\"1s\"\r\n            repeatCount=\"indefinite\"\r\n            begin=\"0\"\r\n            keySplines=\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\"\r\n            calcMode=\"spline\"\r\n          ></animate>\r\n        </circle>\r\n        <circle\r\n          transform=\"rotate(45 12 12)\"\r\n          cx=\"12\"\r\n          cy=\"2\"\r\n          r=\"0\"\r\n          fill=\"currentColor\"\r\n        >\r\n          <animate\r\n            attributeName=\"r\"\r\n            values=\"0;2;0;0\"\r\n            dur=\"1s\"\r\n            repeatCount=\"indefinite\"\r\n            begin=\"0.125s\"\r\n            keySplines=\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\"\r\n            calcMode=\"spline\"\r\n          ></animate>\r\n        </circle>\r\n        <circle\r\n          transform=\"rotate(90 12 12)\"\r\n          cx=\"12\"\r\n          cy=\"2\"\r\n          r=\"0\"\r\n          fill=\"currentColor\"\r\n        >\r\n          <animate\r\n            attributeName=\"r\"\r\n            values=\"0;2;0;0\"\r\n            dur=\"1s\"\r\n            repeatCount=\"indefinite\"\r\n            begin=\"0.25s\"\r\n            keySplines=\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\"\r\n            calcMode=\"spline\"\r\n          ></animate>\r\n        </circle>\r\n        <circle\r\n          transform=\"rotate(135 12 12)\"\r\n          cx=\"12\"\r\n          cy=\"2\"\r\n          r=\"0\"\r\n          fill=\"currentColor\"\r\n        >\r\n          <animate\r\n            attributeName=\"r\"\r\n            values=\"0;2;0;0\"\r\n            dur=\"1s\"\r\n            repeatCount=\"indefinite\"\r\n            begin=\"0.375s\"\r\n            keySplines=\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\"\r\n            calcMode=\"spline\"\r\n          ></animate>\r\n        </circle>\r\n        <circle\r\n          transform=\"rotate(180 12 12)\"\r\n          cx=\"12\"\r\n          cy=\"2\"\r\n          r=\"0\"\r\n          fill=\"currentColor\"\r\n        >\r\n          <animate\r\n            attributeName=\"r\"\r\n            values=\"0;2;0;0\"\r\n            dur=\"1s\"\r\n            repeatCount=\"indefinite\"\r\n            begin=\"0.5s\"\r\n            keySplines=\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\"\r\n            calcMode=\"spline\"\r\n          ></animate>\r\n        </circle>\r\n        <circle\r\n          transform=\"rotate(225 12 12)\"\r\n          cx=\"12\"\r\n          cy=\"2\"\r\n          r=\"0\"\r\n          fill=\"currentColor\"\r\n        >\r\n          <animate\r\n            attributeName=\"r\"\r\n            values=\"0;2;0;0\"\r\n            dur=\"1s\"\r\n            repeatCount=\"indefinite\"\r\n            begin=\"0.625s\"\r\n            keySplines=\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\"\r\n            calcMode=\"spline\"\r\n          ></animate>\r\n        </circle>\r\n        <circle\r\n          transform=\"rotate(270 12 12)\"\r\n          cx=\"12\"\r\n          cy=\"2\"\r\n          r=\"0\"\r\n          fill=\"currentColor\"\r\n        >\r\n          <animate\r\n            attributeName=\"r\"\r\n            values=\"0;2;0;0\"\r\n            dur=\"1s\"\r\n            repeatCount=\"indefinite\"\r\n            begin=\"0.75s\"\r\n            keySplines=\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\"\r\n            calcMode=\"spline\"\r\n          ></animate>\r\n        </circle>\r\n        <circle\r\n          transform=\"rotate(315 12 12)\"\r\n          cx=\"12\"\r\n          cy=\"2\"\r\n          r=\"0\"\r\n          fill=\"currentColor\"\r\n        >\r\n          <animate\r\n            attributeName=\"r\"\r\n            values=\"0;2;0;0\"\r\n            dur=\"1s\"\r\n            repeatCount=\"indefinite\"\r\n            begin=\"0.875s\"\r\n            keySplines=\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\"\r\n            calcMode=\"spline\"\r\n          ></animate>\r\n        </circle>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { Loading, NavBar, Search } from \"./components\";\r\nimport useInput from \"./hooks/useInput\";\r\n\r\nfunction App() {\r\n  const [shipData, setShipData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [navOpened, setNavOpened] = useState(false);\r\n\r\n  const searchInput = useInput('');\r\n\r\n\r\n  // Get Shipment data, sort and save in shipData state, then set loading state to false;\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        \"https://bitbucket.org/hpstore/spacex-cargo-planner/raw/204125d74487b1423bbf0453f4dcb53a2161353b/shipments.json\"\r\n      )\r\n      .then((res) => {\r\n        setShipData(\r\n          res.data.sort((a, b) =>\r\n            a.name !== b.name ? (a.name < b.name ? -1 : 1) : 0\r\n          )\r\n        );\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setShipData([]);\r\n        setLoading(false);\r\n        alert(err);\r\n      });\r\n  }, []);\r\n\r\n  return loading ? (\r\n    <Loading/>\r\n  ) : (\r\n    <>\r\n      <NavBar\r\n        shipData={shipData}\r\n        searchValue={searchInput.value}\r\n        navOpened={navOpened}\r\n        setNavOpened={setNavOpened}\r\n      />\r\n      <div className=\"main\">\r\n        <Search setSearch={searchInput.onChange} navOpened={navOpened} />\r\n        <Outlet context={[shipData]} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport { Company } from \"./components\";\r\n\r\nimport \"./style/index.scss\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Routes>\r\n      <Route path=\"/spacex-cargo-planner\" element={<App />}>\r\n        <Route\r\n          index\r\n          element={\r\n            <div className=\"company\">\r\n              <h1>Please Select Company</h1>\r\n            </div>\r\n          }\r\n        />\r\n        <Route path=\":companyId\" element={<Company />} />\r\n      </Route>\r\n    </Routes>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}